'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

var useModal = function useModal(config) {
  var modalConfig = config || {};
  var _modalConfig$defaultV = modalConfig.defaultVisible,
      defaultVisible = _modalConfig$defaultV === void 0 ? false : _modalConfig$defaultV;

  var _useState = react.useState(defaultVisible),
      _useState2 = _slicedToArray(_useState, 2),
      visible = _useState2[0],
      setVisible = _useState2[1];

  var show = react.useCallback(function () {
    return setVisible(true);
  }, [visible]);
  var close = react.useCallback(function () {
    return setVisible(false);
  }, [visible]);
  var modalProps = {
    visible: visible,
    onCancel: close
  };
  return {
    visible: visible,
    show: show,
    close: close,
    modalProps: modalProps
  };
};

exports.useModal = useModal;
