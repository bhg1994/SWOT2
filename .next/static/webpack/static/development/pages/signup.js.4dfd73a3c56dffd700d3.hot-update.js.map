{"version":3,"file":"static/webpack/static/development/pages/signup.js.4dfd73a3c56dffd700d3.hot-update.js","sources":["webpack:///./pages/signup.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Form, Input, Button, Checkbox, Typography } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SIGN_UP_REQUEST } from \"../reducers/user\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    position: \"absolute\",\n    width: 600,\n    height: 600,\n    left: \"50%\",\n    top: \"50%\",\n    marginLeft: -300,\n    marginTop: -250,\n    border: \"1px solid gray\"\n  },\n  registerWrap: {\n    backgroundColor: \"white\",\n    display: \"inline-block\",\n    height: \"100%\",\n    width: \"100%\"\n  },\n  registerContainer: {\n    position: \"absolute\",\n    margin: 40\n  },\n  secondSection: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  email: {\n    marginTop: 20,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  duplicate: {\n    margin: \"70px 0 0 20px\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  thirdSection: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  password: {\n    margin: \"20px 0 0 0\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  repassword: {\n    margin: \"20px 0 0 20px\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  fourthSection: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  telephone: {\n    margin: \"20px 0 0 0\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  name: {\n    margin: \"20px 0 0 20px\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  fifthSection: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n  // check: {\n  //   margin: \"20px 0 0 0\",\n  //   display: \"flex\",\n  //   flexDirection: \"column\"\n  // }\n});\n\n/* custom Hooks */\n\nexport const useInput = (initValue = null) => {\n  const [value, setter] = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Signup = () => {\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\n  const [term, setTerm] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [termError, setTermError] = useState(false);\n  const [telephone, setTelephone] = useState(\"\");\n\n  const { Text } = Typography;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { isSigningUp, me } = useSelector(state => state.user);\n\n  // useCallback으로 감쌀때 함수 내부에서 쓰는 state를 deps배열로 넣는다.\n  const onSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      if (password !== passwordCheck) {\n        return setPasswordError(true);\n      }\n\n      if (!term) {\n        return setTermError(true);\n      }\n\n      dispatch({\n        type: SIGN_UP_REQUEST,\n        data: {\n          id,\n          name,\n          password,\n          telephone\n        }\n      });\n    },\n    [id, name, password, passwordCheck, telephone, term]\n  );\n\n  const onChangeId = e => {\n    setId(e.target.value);\n  };\n\n  const onChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPasswordError(e.target.value !== passwordCheck);\n    setPassword(e.target.value);\n  };\n\n  const onChangeTelephone = e => {\n    setTelephone(e.target.value);\n  };\n\n  const onChangePasswordChk = useCallback(\n    e => {\n      setPasswordError(e.target.value !== password);\n      setPasswordCheck(e.target.value);\n    },\n    [password]\n  );\n\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n\n  return (\n    <>\n      <section className={classes.wrapper}>\n        <div className={classes.registerWrap}>\n          <section className={classes.registerContainer}>\n            <Text strong style={{ fontSize: \"25px\" }}>\n              CREATE AN ACCOUNT\n            </Text>\n            <Form onSubmit={onSubmit} style={{ padding: 10 }}>\n              <div className={classes.secondSection}>\n                <div className={classes.email}>\n                  <label className={classes.emailLabel} htmlFor=\"emailLabel\">\n                    EMAIL ADDRESS\n                  </label>\n                  <br />\n                  <Input\n                    name=\"register_email\"\n                    value={id}\n                    required\n                    onChange={onChangeId}\n                    placeholder=\"YOUR EMAIL ADDRESS\"\n                    style={{ width: 225, height: 50 }}\n                  />\n                </div>\n                <div className={classes.duplicate}>\n                  <Button>중복 확인</Button>\n                </div>\n              </div>\n              <div className={classes.thirdSection}>\n                <div className={classes.password}>\n                  <label htmlFor=\"passwordLabel\">PASSWORD</label>\n                  <br />\n                  <Input\n                    name=\"register_password\"\n                    type=\"password\"\n                    value={password}\n                    required\n                    onChange={onChangePassword}\n                    placeholder=\"ENTER VALID PASSWORD\"\n                    style={{ width: 225, height: 50 }}\n                  />\n                </div>\n                <div className={classes.repassword}>\n                  <label htmlFor=\"rePasswordLabel\">RE-ENTER PASSWORD</label>\n                  <br />\n                  <Input\n                    name=\"register_password2\"\n                    type=\"password\"\n                    value={passwordCheck}\n                    required\n                    onChange={onChangePasswordChk}\n                    placeholder=\"ENTER VALID PASSWORD\"\n                    style={{ width: 225, height: 50 }}\n                  />\n                </div>\n              </div>\n              {passwordError && (\n                <div style={{ color: \"red\" }}>\n                  비밀번호가 일치하지 않습니다.\n                </div>\n              )}\n              <div className={classes.fourthSection}>\n                <div className={classes.telephone}>\n                  <label htmlFor=\"TELEPHONE\">TELEPHONE</label>\n                  <br />\n                  <Input\n                    name=\"register_telephone\"\n                    type=\"text\"\n                    value={telephone}\n                    required\n                    onChange={onChangeTelephone}\n                    placeholder=\"ENTER VALID TELEPHONENUM\"\n                    style={{ width: 225, height: 50 }}\n                  />\n                </div>\n                <div className={classes.name}>\n                  <label htmlFor=\"nameLabel\">NAME</label>\n                  <br />\n                  <Input\n                    name=\"register_name\"\n                    value={name}\n                    required\n                    onChange={onChangeName}\n                    placeholder=\"YOUR NAME\"\n                    style={{ width: 225, height: 50 }}\n                  />\n                </div>\n                <div className={classes.fifthSection}>\n                  <div className={classes.check}>\n                    <div>\n                      <Checkbox\n                        name=\"user-term\"\n                        checked={term}\n                        onChange={onChangeTerm}\n                        style={{ marginTop: \"20px\" }}\n                      >\n                        회원가입 약관에 동의합니다.\n                      </Checkbox>\n                      {termError && (\n                        <div style={{ color: \"red\" }}>\n                          약관에 동의하셔야 합니다.\n                        </div>\n                      )}\n                    </div>\n                    <div style={{ margin: \"20px 0 0 50px\" }}>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        가입하기\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          </section>\n        </div>\n      </section>\n    </>\n  );\n};\nexport default Signup;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AATA;AA/DA;AA0EA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAWA;AACA;AACA;AAbA;AAaA;AAAA;AAbA;AAAA;AACA;AACA;AAcA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;;;;A","sourceRoot":""}