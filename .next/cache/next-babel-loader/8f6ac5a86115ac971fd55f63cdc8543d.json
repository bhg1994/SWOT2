{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\6201-20\\\\SWOT2\\\\pages\\\\login.jsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { Form, Input, Button, Typography, Card } from \"antd\";\nimport Link from \"next/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { LOG_IN_REQUEST } from \"../reducers/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst useStyles = makeStyles({\n  wrapper: {\n    position: \"absolute\",\n    width: 800,\n    height: 500,\n    left: \"50%\",\n    top: \"50%\",\n    marginLeft: -400,\n    marginTop: -250\n  },\n  loginwrap: {\n    backgroundColor: \"white\",\n    display: \"inline-block\",\n    width: \"70%\",\n    height: \"100%\",\n    margin: \"auto\"\n  },\n  textLogin: {\n    fontSize: 20,\n    marginBottom: 20\n  },\n  textRegister: {\n    fontSize: 20,\n    color: \"white\",\n    marginTop: 20\n  },\n  registerwrap: {\n    background: \"gray\",\n    display: \"inline-block\",\n    width: \"30%\",\n    height: \"100%\"\n  },\n  email: {\n    marginTop: 20,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  password: {\n    marginTop: 20,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  loginContainer: {\n    position: \"absolute\",\n    margin: 40\n  },\n  registerContainer: {\n    position: \"absolute\",\n    margin: 40\n  },\n  article: {\n    marginTop: 20\n  },\n  loginBtn: {\n    marginTop: 60,\n    width: 150,\n    height: 50,\n    color: \"white\",\n    backgroundColor: \"black\"\n  },\n  registerBtn: {\n    marginTop: 30,\n    width: 150,\n    height: 50,\n    color: \"white\",\n    backgroundColor: \"gray\"\n  },\n  input: {\n    marginTop: 20,\n    width: 300,\n    height: 40\n  },\n  [\"@media (max-width:1080px)\"]: {\n    wrapper: {\n      position: \"absolute\",\n      width: 600,\n      height: 500,\n      left: \"50%\",\n      top: \"50%\",\n      marginLeft: -300,\n      marginTop: -250\n    },\n    loginwrap: {\n      width: \"60%\",\n      height: \"100%\"\n    },\n    registerwrap: {\n      width: \"40%\",\n      height: \"100%\"\n    }\n  },\n  [\"@media (max-width:780px)\"]: {\n    wrapper: {\n      position: \"absolute\",\n      width: 400,\n      height: 500,\n      left: \"50%\",\n      top: \"50%\",\n      marginLeft: -200,\n      marginTop: -250\n    },\n    loginwrap: {\n      width: \"50%\",\n      height: \"100%\"\n    },\n    registerwrap: {\n      width: \"50%\",\n      height: \"100%\"\n    },\n    input: {\n      width: 150\n    }\n  },\n  [\"@media (max-width:600px)\"]: {\n    wrapper: {\n      position: \"absolute\",\n      width: 200,\n      height: 500,\n      left: \"50%\",\n      top: \"50%\",\n      marginLeft: -100,\n      marginTop: -250\n    },\n    input: {\n      width: 120\n    },\n    registerwrap: {\n      display: \"none\"\n    }\n  }\n});\nexport const useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Loginscreen = () => {\n  const classes = useStyles();\n  const matches = useMediaQuery(\"(min-width:600px)\");\n  const [id, onChangeId] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const {\n    isLoggingIn\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  const onClickedLogin = () => {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        id,\n        password\n      }\n    });\n  };\n\n  const loginBoxes = __jsx(\"section\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.loginwrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.loginContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: classes.textLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"LOGIN\"), __jsx(\"div\", {\n    className: classes.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"emailLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"EMAIL ADDRESS\"), __jsx(Input, {\n    className: classes.input,\n    name: \"login_email\",\n    type: \"text\",\n    placeholder: \"YOUR EMAIL ADDRESS\",\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: classes.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"passwordLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"PASSWORD\"), __jsx(Input, {\n    className: classes.input,\n    name: \"login_password\",\n    type: \"password\",\n    placeholder: \"ENTER VALID PASSWORD\",\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  })), __jsx(Button, {\n    className: classes.loginBtn,\n    onClick: onClickedLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Login\"))), __jsx(\"div\", {\n    className: classes.registerwrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.registerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: classes.textRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"NOT A MEMBER?\"), __jsx(\"article\", {\n    className: classes.article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"If you are using SWOT as a member, you can experience a wider variety of services.\", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), \" \", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), \"Classroom reservation system, study collection board, and various services are available.\"), __jsx(Link, {\n    href: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: classes.registerBtn,\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"REGISTER NOW\"))))));\n\n  const loginView = __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, loginBoxes)));\n\n  return __jsx(React.Fragment, null, loginView);\n};\n\nexport default Loginscreen;","map":{"version":3,"sources":["C:\\Users\\6201-20\\SWOT2\\pages\\login.jsx"],"names":["React","useCallback","useState","useEffect","Form","Input","Button","Typography","Card","Link","makeStyles","useMediaQuery","LOG_IN_REQUEST","useDispatch","useSelector","useStyles","wrapper","position","width","height","left","top","marginLeft","marginTop","loginwrap","backgroundColor","display","margin","textLogin","fontSize","marginBottom","textRegister","color","registerwrap","background","email","flexDirection","password","loginContainer","registerContainer","article","loginBtn","registerBtn","input","useInput","initValue","value","setter","handler","e","target","Loginscreen","classes","matches","id","onChangeId","onChangePassword","isLoggingIn","state","user","dispatch","onClickedLogin","type","data","loginBoxes","loginView"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\nimport { Form, Input, Button, Typography, Card } from \"antd\";\nimport Link from \"next/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport { LOG_IN_REQUEST } from \"../reducers/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    position: \"absolute\",\n    width: 800,\n    height: 500,\n    left: \"50%\",\n    top: \"50%\",\n    marginLeft: -400,\n    marginTop: -250\n  },\n  loginwrap: {\n    backgroundColor: \"white\",\n    display: \"inline-block\",\n    width: \"70%\",\n    height: \"100%\",\n    margin: \"auto\"\n  },\n  textLogin: {\n    fontSize: 20,\n    marginBottom: 20\n  },\n  textRegister: {\n    fontSize: 20,\n    color: \"white\",\n    marginTop: 20\n  },\n  registerwrap: {\n    background: \"gray\",\n    display: \"inline-block\",\n    width: \"30%\",\n    height: \"100%\"\n  },\n  email: {\n    marginTop: 20,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  password: {\n    marginTop: 20,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  loginContainer: {\n    position: \"absolute\",\n    margin: 40\n  },\n  registerContainer: {\n    position: \"absolute\",\n    margin: 40\n  },\n  article: {\n    marginTop: 20\n  },\n  loginBtn: {\n    marginTop: 60,\n    width: 150,\n    height: 50,\n    color: \"white\",\n    backgroundColor: \"black\"\n  },\n  registerBtn: {\n    marginTop: 30,\n    width: 150,\n    height: 50,\n    color: \"white\",\n    backgroundColor: \"gray\"\n  },\n  input: {\n    marginTop: 20,\n    width: 300,\n    height: 40\n  },\n  [\"@media (max-width:1080px)\"]: {\n    wrapper: {\n      position: \"absolute\",\n      width: 600,\n      height: 500,\n      left: \"50%\",\n      top: \"50%\",\n      marginLeft: -300,\n      marginTop: -250\n    },\n    loginwrap: {\n      width: \"60%\",\n      height: \"100%\"\n    },\n    registerwrap: {\n      width: \"40%\",\n      height: \"100%\"\n    }\n  },\n  [\"@media (max-width:780px)\"]: {\n    wrapper: {\n      position: \"absolute\",\n      width: 400,\n      height: 500,\n      left: \"50%\",\n      top: \"50%\",\n      marginLeft: -200,\n      marginTop: -250\n    },\n    loginwrap: {\n      width: \"50%\",\n      height: \"100%\"\n    },\n    registerwrap: {\n      width: \"50%\",\n      height: \"100%\"\n    },\n    input: {\n      width: 150\n    }\n  },\n  [\"@media (max-width:600px)\"]: {\n    wrapper: {\n      position: \"absolute\",\n      width: 200,\n      height: 500,\n      left: \"50%\",\n      top: \"50%\",\n      marginLeft: -100,\n      marginTop: -250\n    },\n    input: {\n      width: 120\n    },\n    registerwrap: {\n      display: \"none\"\n    }\n  }\n});\n\nexport const useInput = (initValue = null) => {\n  const [value, setter] = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Loginscreen = () => {\n  const classes = useStyles();\n  const matches = useMediaQuery(\"(min-width:600px)\");\n\n  const [id, onChangeId] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const { isLoggingIn } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  const onClickedLogin = () => {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        id,\n        password\n      }\n    });\n  };\n\n  const loginBoxes = (\n    <section className={classes.wrapper}>\n      <div className={classes.loginwrap}>\n        <div className={classes.loginContainer}>\n          <label className={classes.textLogin}>LOGIN</label>\n          <div className={classes.email}>\n            <label htmlFor=\"emailLabel\">EMAIL ADDRESS</label>\n            <Input\n              className={classes.input}\n              name=\"login_email\"\n              type=\"text\"\n              placeholder=\"YOUR EMAIL ADDRESS\"\n              onChange={onChangeId}\n            />\n          </div>\n          <div className={classes.password}>\n            <label htmlFor=\"passwordLabel\">PASSWORD</label>\n            <Input\n              className={classes.input}\n              name=\"login_password\"\n              type=\"password\"\n              placeholder=\"ENTER VALID PASSWORD\"\n              onChange={onChangePassword}\n            />\n          </div>\n          <Button className={classes.loginBtn} onClick={onClickedLogin}>\n            Login\n          </Button>\n        </div>\n      </div>\n      <div className={classes.registerwrap}>\n        <div className={classes.registerContainer}>\n          <label className={classes.textRegister}>NOT A MEMBER?</label>\n          <article className={classes.article}>\n            If you are using SWOT as a member, you can experience a wider\n            variety of services.\n            <br /> <br />\n            Classroom reservation system, study collection board, and various\n            services are available.\n          </article>\n          <Link href=\"/signup\">\n            <a>\n              <Button className={classes.registerBtn} htmlType=\"submit\">\n                REGISTER NOW\n              </Button>\n            </a>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n\n  const loginView = (\n    <div>\n      <div>\n        <div>{loginBoxes}</div>\n      </div>\n    </div>\n  );\n\n  return <>{loginView}</>;\n};\n\nexport default Loginscreen;\n"]},"metadata":{},"sourceType":"module"}