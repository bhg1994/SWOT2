{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post';\n\nfunction addPostAPI() {}\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:\\Users\\6201-20\\SWOT2\\sagas\\post.js"],"names":["all","delay","fork","put","takeLatest","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","addPost","type","e","error","watchAddPost","addCommentAPI","addComment","action","data","postId","watchAddComment","postSaga"],"mappings":"AAAA,SACIA,GADJ,EAEIC,KAFJ,EAGIC,IAHJ,EAIIC,GAJJ,EAKIC,UALJ,QAMO,oBANP;AAOA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,gBAJJ,EAKIC,gBALJ,EAMIC,gBANJ,QAOO,kBAPP;;AASA,SAASC,UAAT,GAAsB,CAErB;;AAED,UAAUC,OAAV,GAAoB;AAChB,MAAI;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEH;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAOI,CAAP,EAAU;AACR,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEL,gBADA;AAENO,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUE,YAAV,GAAyB;AACrB,QAAMZ,UAAU,CAACK,gBAAD,EAAmBG,OAAnB,CAAhB;AACH;;AAED,SAASK,aAAT,GAAyB,CAExB;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AACzB,MAAI;AACA,UAAMlB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEN,mBADA;AAENa,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEF,MAAM,CAACC,IAAP,CAAYC;AADlB;AAFA,KAAD,CAAT;AAMH,GARD,CAQE,OAAOP,CAAP,EAAU;AACR,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAER,mBADA;AAENU,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUQ,eAAV,GAA4B;AACxB,QAAMlB,UAAU,CAACE,mBAAD,EAAsBY,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAChC,QAAMvB,GAAG,CAAC,CACNE,IAAI,CAACc,YAAD,CADE,EAENd,IAAI,CAACoB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {\n    all,\n    delay,\n    fork,\n    put,\n    takeLatest\n} from 'redux-saga/effects';\nimport {\n    ADD_COMMENT_FAILURE,\n    ADD_COMMENT_REQUEST,\n    ADD_COMMENT_SUCCESS,\n    ADD_POST_FAILURE,\n    ADD_POST_REQUEST,\n    ADD_POST_SUCCESS,\n} from '../reducers/post';\n\nfunction addPostAPI() {\n\n}\n\nfunction* addPost() {\n    try {\n        yield delay(2000);\n        yield put({\n            type: ADD_POST_SUCCESS,\n        });\n    } catch (e) {\n        yield put({\n            type: ADD_POST_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {\n\n}\n\nfunction* addComment(action) {\n    try {\n        yield delay(2000);\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n            data: {\n                postId: action.data.postId,\n            },\n        });\n    } catch (e) {\n        yield put({\n            type: ADD_COMMENT_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchAddComment() {\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}