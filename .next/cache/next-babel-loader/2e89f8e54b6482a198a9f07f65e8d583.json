{"ast":null,"code":"import { all, delay, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction loginAPI() {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/login');\n}\n\nfunction* login() {\n  try {\n    // yield call(loginAPI);\n    yield delay(2000);\n    yield put({\n      // put은 dispatch 동일\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction signUpAPI() {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/login');\n}\n\nfunction* signUp() {\n  try {\n    // yield call(signUpAPI);\n    yield delay(2000);\n    throw new Error('에러에러에러');\n    yield put({\n      // put은 dispatch 동일\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/jaykim/SWOT2/sagas/user.js"],"names":["all","delay","fork","put","takeEvery","axios","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","loginAPI","post","login","type","e","console","error","watchLogin","signUpAPI","signUp","Error","watchSignUp","userSaga"],"mappings":"AAAA,SACIA,GADJ,EAEIC,KAFJ,EAGIC,IAHJ,EAIIC,GAJJ,EAKIC,SALJ,QAMO,oBANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,eALJ,EAMIC,eANJ,QAOO,kBAPP;;AASA,SAASC,QAAT,GAAoB;AAChB;AACA,SAAOP,KAAK,CAACQ,IAAN,CAAW,QAAX,CAAP;AACH;;AAED,UAAUC,KAAV,GAAkB;AACd,MAAI;AACA;AACA,UAAMb,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AAAE;AACRY,MAAAA,IAAI,EAAEP;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOQ,CAAP,EAAU;AAAE;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMb,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAET;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUa,UAAV,GAAuB;AACnB,QAAMf,SAAS,CAACG,cAAD,EAAiBO,KAAjB,CAAf;AACH;;AAED,SAASM,SAAT,GAAqB;AACjB;AACA,SAAOf,KAAK,CAACQ,IAAN,CAAW,QAAX,CAAP;AACH;;AAED,UAAUQ,MAAV,GAAmB;AACf,MAAI;AACA;AACA,UAAMpB,KAAK,CAAC,IAAD,CAAX;AACA,UAAM,IAAIqB,KAAJ,CAAU,QAAV,CAAN;AACA,UAAMnB,GAAG,CAAC;AAAE;AACRY,MAAAA,IAAI,EAAEJ;AADA,KAAD,CAAT;AAGH,GAPD,CAOE,OAAOK,CAAP,EAAU;AAAE;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMb,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEN,eADA;AAENS,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUO,WAAV,GAAwB;AACpB,QAAMnB,SAAS,CAACM,eAAD,EAAkBW,MAAlB,CAAf;AACH;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAMxB,GAAG,CAAC,CACNE,IAAI,CAACiB,UAAD,CADE,EAENjB,IAAI,CAACqB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {\n    all,\n    delay,\n    fork,\n    put,\n    takeEvery\n} from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n    LOG_IN_FAILURE,\n    LOG_IN_REQUEST,\n    LOG_IN_SUCCESS,\n    SIGN_UP_FAILURE,\n    SIGN_UP_REQUEST,\n    SIGN_UP_SUCCESS,\n} from '../reducers/user';\n\nfunction loginAPI() {\n    // 서버에 요청을 보내는 부분\n    return axios.post('/login');\n}\n\nfunction* login() {\n    try {\n        // yield call(loginAPI);\n        yield delay(2000);\n        yield put({ // put은 dispatch 동일\n            type: LOG_IN_SUCCESS,\n        });\n    } catch (e) { // loginAPI 실패\n        console.error(e);\n        yield put({\n            type: LOG_IN_FAILURE,\n        });\n    }\n}\n\nfunction* watchLogin() {\n    yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction signUpAPI() {\n    // 서버에 요청을 보내는 부분\n    return axios.post('/login');\n}\n\nfunction* signUp() {\n    try {\n        // yield call(signUpAPI);\n        yield delay(2000);\n        throw new Error('에러에러에러');\n        yield put({ // put은 dispatch 동일\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch (e) { // loginAPI 실패\n        console.error(e);\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchSignUp() {\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogin),\n        fork(watchSignUp),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}